const mappedNames = [
	['gen', 'Gen.G'],
	['t1', 'T1'],
	['drx', 'DRX'],
	['lsb', 'Liiv SANDBOX'],
	['dk', 'DWG KIA'],
	['kdf', 'Kwangdong Freecs'],
	['kt', 'KT Rolster'],
	['ns', 'Nongshim RedForce'],
	['hle', 'Hanwha Life Esports'],
	['bro', 'Fredit BRION'],
	['xl', 'Excel Esports'],
	['fnc', 'Fnatic'],
	['rge', 'Rogue'],
	['g2', 'G2 Esports'],
	['mad', 'MAD Lions'],
	['vit', 'Team Vitality'],
	['ast', 'Astralis'],
	['msf', 'Misfits Gaming'],
	['sk', 'SK Gaming'],
	['bds', 'Team BDS'],
	['hrts', 'Team Heretics'],
	['fntq', 'Fnatic TQ'],
	['bso', 'BISONS ECLUB'],
	['g2ar', 'G2 Arctic'],
	['gia', 'Giants'],
	['bar', 'Barça eSports'],
	['koi', 'KOI'],
	['madm', 'MAD Lions Madrid'],
	['ucam', 'UCAM Tokiers'],
	['mrs', 'Movistar Riders'],
	['chf', 'Chiefs Esports Club'],
	['dw', 'Dire Wolves'],
	['ord', 'ORDER'],
	['pce', 'PEACE'],
	['pgg', 'Pentanet.GG'],
	['kng', 'Kanga Esports'],
	['mec', 'MAMMOTH'],
	['grv', 'Gravitas'],
	['ldlc', 'LDLC OL'],
	['gw', 'GameWard'],
	['vitb', 'Vitality.Bee'],
	['kc', 'Karmine Corp'],
	['msfp', 'Misfits Premier'],
	['bds.a', 'Team BDS Academy'],
	['go', 'Team GO'],
	['sly', 'Solary'],
	['opl', 'Team Oplon'],
	['me', 'Mirage Elyandra'],
	['byg', 'Beyond Gaming'],
	['jt', 'J Team'],
	['cfo', 'CTBC Flying Oyster'],
	['psg', 'PSG Talon'],
	['dcg', 'Deep Cross Gaming'],
	['fak', 'Frank Esports'],
	['imp', 'Impunity'],
	['mft', 'Meta Falcon Team'],
	['dwt', 'Dewish Team'],
	['s9', 'SEM9'],
	['eg', 'Evil Geniuses'],
	['100', '100 Thieves'],
	['tl', 'Team Liquid'],
	['clg', 'Counter Logic Gaming'],
	['fly', 'FlyQuest'],
	['c9', 'Cloud9'],
	['gg', 'Golden Guardians'],
	['dig', 'Dignitas'],
	['tsm', 'Team SoloMid'],
	['imt', 'Immortals'],
	['tl.a', 'Team Liquid Academy'],
	['100.a', '100 Thieves Academy'],
	['dig.a', 'Dignitas Academy'],
	['clg.a', 'Counter Logic Gaming Academy'],
	['imt.a', 'Immortals Academy'],
	['c9.a', 'Cloud9 Academy'],
	['fly.a', 'FlyQuest Academy'],
	['eg.a', 'Evil Geniuses Academy'],
	['gg.a', 'Golden Guardians Academy'],
	['tsm.a', 'Team SoloMid Academy'],
	['isg', 'Isurus'],
	['est', 'Estral Esports'],
	['ak', 'All Knights'],
	['inf', 'Infinity Esports'],
	['r7', 'Rainbow7'],
	['aze', 'Team Aze'],
	['xtn', 'XTEN Esports'],
	['get', 'Globant Emerald'],
	['rgo', 'AGO ROGUE'],
	['ihg', 'Illuminar Gaming'],
	['z10', 'Zero Tenacity'],
	['gsk', 'Goskilla'],
	['fsk', 'Forsaken'],
	['wolf', 'Iron Wolves'],
	['dv1', 'devils.one'],
	['knf', 'Komil&Friends'],
	['esca', 'Team ESCA Gaming'],
	['ggm', "Gentlemen's Gaming"],
	['v5', 'Victory Five'],
	['jdg', 'JD Gaming'],
	['tes', 'Top Esports'],
	['edg', 'EDward Gaming'],
	['rng', 'Royal Never Give Up'],
	['lng', 'LNG Esports'],
	['al', "Anyone's Legend"],
	['omg', 'Oh My God'],
	['wbg', 'Weibo Gaming'],
	['fpx', 'FunPlus Phoenix'],
	['up', 'Ultra Prime'],
	['tt', 'ThunderTalk Gaming'],
	['blg', 'Bilibili Gaming'],
	['ra', 'Rare Atom'],
	['lgd', 'LGD Gaming'],
	['ig', 'Invictus Gaming'],
	['we', 'Team WE'],
	['sg', 'Sengoku Gaming'],
	['dfm', 'DetonatioN FocusMe'],
	['shg', 'Fukuoka SoftBank Hawks gaming'],
	['bc', 'Burning Core'],
	['cga', 'Crest Gaming Act'],
	['rj', 'Rascal Jester'],
	['axz', 'AXIZ'],
	['v3', 'V3 Esports'],
	['nsr', 'NASR eSports Turkey'],
	['dp', 'Dark Passage'],
	['iw', 'İstanbul Wildcats'],
	['gal', 'Galakticos'],
	['sup', 'SuperMassive Blaze'],
	['bjk', 'Beşiktaş Esports'],
	['gs', 'Galatasaray Esports'],
	['aur', 'Team AURORA'],
	['fb', 'Fenerbahçe Esports'],
	['5r', '5 Ronin'],
	['ces', 'CERBERUS Esports'],
	['tw', 'Team Whales'],
	['se', 'SBTC Esports'],
	['ts', 'Team Secret'],
	['gam', 'GAM Esports'],
	['ge', 'Genius Esports'],
	['ase', 'AS Esports'],
	['sgb', 'Saigon Buffalo'],
	['red', 'RED Canids'],
	['fur', 'FURIA Esports'],
	['png', 'paiN Gaming'],
	['lll', 'LOUD'],
	['kbm', 'KaBuM! e-Sports'],
	['lbr', 'Liberty'],
	['fla', 'Flamengo Los Grandes'],
	['nmg', 'Miners'],
	['itz', 'INTZ'],
	['rns', 'Rensga Esports'],
]

export const mapFullTeamNameToAbv = (teamName: string) => {
	const matchingName = mappedNames.find((name) => name[1] === teamName)

	if (matchingName) {
		return matchingName[0]
	} else {
		return null
	}
}

export const mapAbvTeamNameToFull = (teamAbv: string) => {
	const matchingName = mappedNames.find((name) => name[0] === teamAbv)

	if (matchingName) {
		return matchingName[1]
	} else {
		return null
	}
}
